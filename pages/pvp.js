import { useState, useEffect } from 'react';\nimport Layout from '../components/Layout';\nimport PvPInterface from '../components/PvPInterface';\nimport MatchingInterface from '../components/MatchingInterface';\nimport { useAccount } from 'wagmi';\nimport { useApi } from '../lib/utils';\n\nexport default function PvP() {\n  const { address, isConnected } = useAccount();\n  const [currentMatches, setCurrentMatches] = useState([]);\n  const [balances, setBalances] = useState({ ETH: 0, USDT: 0, USDC: 0 });\n  const [isMatching, setIsMatching] = useState(false);\n  const [userClass, setUserClass] = useState('Barnacle');\n  const [loading, setLoading] = useState(true);\n\n  // Use API hook with mock fallback\n  const { data: userData } = useApi(address ? `/api/auth/user/${address}` : null);\n  const { data: balanceData } = useApi(address ? `/api/trading/balances/${address}` : null);\n  const { data: matchData } = useApi(address ? `/api/matches/user/${address}` : null);\n\n  useEffect(() => {\n    if (isConnected && address) {\n      fetchUserData();\n    } else {\n      setLoading(false);\n    }\n  }, [isConnected, address, userData, balanceData, matchData]);\n\n  const fetchUserData = async () => {\n    try {\n      setLoading(true);\n      \n      // Use data from API hooks\n      if (userData?.user) {\n        setUserClass(userData.user.user_class || 'Barnacle');\n      }\n      \n      if (balanceData) {\n        setBalances(balanceData);\n      }\n      \n      if (matchData) {\n        setCurrentMatches(matchData);\n      }\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchUserBalances = async () => {\n    // This is now handled by the useApi hook\n    return balanceData || {\n      ETH: '2.45',\n      USDT: '5000.00',\n      USDC: '3500.50'\n    };\n  };\n\n  const fetchCurrentMatches = async () => {\n    // This is now handled by the useApi hook\n    return matchData || [];\n  };\n\n  if (!isConnected) {\n    return (\n      <Layout title=\"PvP Trading - Fantasy Crypto\">\n        <div className=\"flex items-center justify-center min-h-screen bg-gradient-to-br from-fantasy-light to-white\">\n          <div className=\"text-center bg-white p-12 rounded-2xl shadow-xl max-w-md mx-auto\">\n            <div className=\"text-6xl mb-6\">üîê</div>\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              Connect Your Wallet\n            </h2>\n            <p className=\"text-gray-600 mb-6\">\n              Please connect your wallet to access PvP trading competitions\n            </p>\n            <div className=\"text-sm text-gray-500\">\n              <p>Supported wallets:</p>\n              <p>MetaMask ‚Ä¢ Phantom ‚Ä¢ WalletConnect</p>\n            </div>\n            {process.env.NEXT_PUBLIC_DEMO_MODE === 'true' && (\n              <div className=\"mt-4 p-3 bg-blue-50 rounded-lg text-sm text-blue-700\">\n                <p>üéÆ <strong>Demo Mode:</strong> This is a preview with mock data.</p>\n                <p>Connect a wallet to see the interface in action!</p>\n              </div>\n            )}\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n\n  if (loading) {\n    return (\n      <Layout title=\"PvP Trading - Fantasy Crypto\">\n        <div className=\"flex items-center justify-center min-h-screen\">\n          <div className=\"text-center\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-fantasy-primary mx-auto mb-4\"></div>\n            <p className=\"text-gray-600\">Loading your trading data...</p>\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout title=\"PvP Trading - Fantasy Crypto\">\n      <div className=\"min-h-screen bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\n          {/* Demo Mode Banner */}\n          {process.env.NEXT_PUBLIC_DEMO_MODE === 'true' && (\n            <div className=\"mb-6 bg-blue-50 border border-blue-200 rounded-lg p-4\">\n              <div className=\"flex items-center\">\n                <div className=\"text-blue-600 mr-3\">üéÆ</div>\n                <div>\n                  <h4 className=\"text-blue-800 font-semibold\">Demo Mode Active</h4>\n                  <p className=\"text-blue-700 text-sm\">You're viewing Fantasy Crypto with mock data. All features are functional but no real trading occurs.</p>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Header */}\n          <div className=\"md:flex md:items-center md:justify-between mb-8\">\n            <div className=\"flex-1 min-w-0\">\n              <h2 className=\"text-3xl font-bold leading-7 text-gray-900 sm:text-4xl sm:truncate\">\n                Player vs Player\n              </h2>\n              <p className=\"mt-2 text-gray-600\">\n                Weekly head-to-head trading competitions. Draft your lineup and compete for ETH prizes.\n              </p>\n            </div>\n            <div className=\"mt-4 md:mt-0 md:ml-4\">\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"text-sm text-gray-500\">Your Class:</span>\n                <span className={`px-3 py-1 rounded-full text-sm font-medium ${getClassStyle(userClass)}`}>\n                  {userClass}\n                </span>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"grid grid-cols-1 gap-6 lg:grid-cols-4\">\n            {/* Wallet Balances - Collapsible Panel */}\n            <div className=\"lg:col-span-1\">\n              <div className=\"bg-white overflow-hidden shadow-lg rounded-xl border border-gray-200\">\n                <div className=\"px-6 py-5\">\n                  <h3 className=\"text-lg leading-6 font-semibold text-gray-900 mb-4 flex items-center\">\n                    <span className=\"text-2xl mr-2\">üí∞</span>\n                    Wallet Balances\n                  </h3>\n                  <div className=\"space-y-4\">\n                    <div className=\"flex justify-between items-center p-3 bg-gray-50 rounded-lg\">\n                      <div className=\"flex items-center\">\n                        <span className=\"text-lg mr-2\">Œû</span>\n                        <span className=\"text-sm font-medium text-gray-900\">ETH</span>\n                      </div>\n                      <span className=\"text-sm font-bold text-gray-900\">{balances.ETH}</span>\n                    </div>\n                    <div className=\"flex justify-between items-center p-3 bg-gray-50 rounded-lg\">\n                      <div className=\"flex items-center\">\n                        <span className=\"text-lg mr-2\">‚ÇÆ</span>\n                        <span className=\"text-sm font-medium text-gray-900\">USDT</span>\n                      </div>\n                      <span className=\"text-sm font-bold text-gray-900\">{balances.USDT}</span>\n                    </div>\n                    <div className=\"flex justify-between items-center p-3 bg-gray-50 rounded-lg\">\n                      <div className=\"flex items-center\">\n                        <span className=\"text-lg mr-2\">‚óä</span>\n                        <span className=\"text-sm font-medium text-gray-900\">USDC</span>\n                      </div>\n                      <span className=\"text-sm font-bold text-gray-900\">{balances.USDC}</span>\n                    </div>\n                  </div>\n                  <p className=\"text-xs text-gray-500 mt-4 text-center italic\">\n                    All other coins are ineligible\n                  </p>\n                </div>\n              </div>\n\n              {/* Quick Stats */}\n              <div className=\"mt-6 bg-white overflow-hidden shadow-lg rounded-xl border border-gray-200\">\n                <div className=\"px-6 py-5\">\n                  <h4 className=\"text-sm font-semibold text-gray-900 mb-3\">Quick Stats</h4>\n                  <div className=\"space-y-2 text-sm\">\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-gray-600\">Active Matches</span>\n                      <span className=\"font-medium\">{currentMatches.length}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-gray-600\">Class</span>\n                      <span className=\"font-medium\">{userClass}</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Main PvP Interface */}\n            <div className=\"lg:col-span-3\">\n              {currentMatches.length > 0 && !isMatching ? (\n                <MatchingInterface \n                  matches={currentMatches}\n                  onMatchUpdate={fetchCurrentMatches}\n                  userClass={userClass}\n                />\n              ) : (\n                <PvPInterface \n                  balances={balances}\n                  userClass={userClass}\n                  onMatchingStart={() => setIsMatching(true)}\n                  onMatchFound={() => {\n                    setIsMatching(false);\n                    fetchCurrentMatches();\n                  }}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nfunction getClassStyle(userClass) {\n  const styles = {\n    'Barnacle': 'bg-gray-100 text-gray-800',\n    'Guppie': 'bg-blue-100 text-blue-800',\n    'Shark': 'bg-green-100 text-green-800',\n    'Whale': 'bg-purple-100 text-purple-800',\n    'Poseidon': 'bg-gradient-to-r from-yellow-400 to-yellow-600 text-yellow-900'\n  };\n  return styles[userClass] || styles['Barnacle'];\n}